# https://github.com/open-mmlab/mmdetection/blob/master/docker/Dockerfile
# base image is refering above offifical Dockerfile by MM Detection.
#
# when we use nvidia/cuda:11.0-devel-ubuntu20.04 as base dockerfile,
# we hit following error:
# - https://github.com/open-mmlab/mmdetection/issues/1893

ARG PYTORCH="1.9.0"
ARG CUDA="11.1"
ARG CUDNN="8"

FROM pytorch/pytorch:${PYTORCH}-cuda${CUDA}-cudnn${CUDNN}-devel

# FORCE_CUDA is needed to build mmcv+onnx+gpu mode.
ENV TORCH_CUDA_ARCH_LIST="6.0 6.1 7.0+PTX" \
    TORCH_NVCC_FLAGS="-Xfatbin -compress-all" \
    CMAKE_PREFIX_PATH="$(dirname $(which conda))/../" \
    FORCE_CUDA="1" \
    LC_ALL="C.UTF-8" \
    LANG="C.UTF-8" \
    PATH="/home/gatheluck/.local/bin:$PATH" \
    PYTHONPATH="/home/gatheluck/code/"

RUN apt-get update \
    && apt-get install -y ffmpeg libsm6 libxext6 git wget ninja-build libglib2.0-0 libsm6 libxrender-dev libxext6 \
    && apt-get clean \
    && rm -rf /var/lib/apt/lists/*

# create new user without this, all result generated from this container require sudo permission. 
RUN useradd -ms /bin/sh gatheluck
USER gatheluck
RUN mkdir -p /home/gatheluck/code/src/ \
    && mkdir -p /home/gatheluck/vender/ 

# install MMCV with ONNXRUNTIME GPU
# we have to follow official instruction: https://github.com/open-mmlab/mmcv/blob/master/docs/deployment/onnxruntime_op.md/#how-to-build-custom-operators-for-onnx-runtime
USER root
WORKDIR /home/gatheluck/vender/
RUN git clone https://github.com/open-mmlab/mmcv.git \
    && wget https://github.com/microsoft/onnxruntime/releases/download/v1.9.0/onnxruntime-linux-x64-gpu-1.9.0.tgz \
    && tar -zxvf onnxruntime-linux-x64-gpu-1.9.0.tgz \
    && rm -rf onnxruntime-linux-x64-gpu-1.9.0.tgz \
    && pip install onnxruntime-gpu
ENV ONNXRUNTIME_DIR="/home/gatheluck/vender/onnxruntime-linux-x64-gpu-1.9.0"
ENV LD_LIBRARY_PATH="${ONNXRUNTIME_DIR}/lib:${LD_LIBRARY_PATH}"

WORKDIR /home/gatheluck/vender/mmcv
RUN MMCV_WITH_OPS=1 MMCV_WITH_ORT=1 python setup.py develop

# install MMDetection
# mmdetection is downloaded under /home/gatheluck/vender/mmdetection.
RUN conda clean --all
RUN git clone https://github.com/open-mmlab/mmdetection.git /home/gatheluck/vender/mmdetection
WORKDIR /home/gatheluck/vender/mmdetection
RUN pip install -r requirements/build.txt \
    && pip install --no-cache-dir -e .

USER gatheluck
WORKDIR /home/gatheluck/code/
COPY --chown=gatheluck:gatheluck requirements.txt Makefile pyproject.toml .flake8 ./
RUN pip install --user --upgrade pip \
    && pip install --user -r requirements.txt

COPY --chown=gatheluck:gatheluck src src
COPY --chown=gatheluck:gatheluck tests tests
